Actor AssaultRifleSpawner replaces Chaingun
{
	States
	{
	Spawn:
		NULL A 0
		NULL A 0 A_SpawnItem("AssaultRifle")
		stop
	}
}

Actor AssaultRifle : AOWWeapon 21044
{
	Tag "Assault Rifle"
	Inventory.PickupMessage "Assault Rifle"
	Obituary "%o was perforated by %k's assault rifle."
	Weapon.PreferredSkin ""
	
	+WEAPON.AMMO_OPTIONAL
	+WEAPON.NOALERT
	
	Weapon.Kickback 90
	
	Weapon.AmmoUse 1
	Weapon.AmmoType "AssaultRifleAmmoClip"
	Weapon.AmmoType2 "AssaultRifleAmmo"

	Weapon.UpSound "AUTRUP"
	AttackSound "AUTRFIRE"

	States
	{
	Ready:
		AUTR A 1 A_WeaponReady
		loop
	Deselect:
		AUTR A 1 Offset(-4,34)
		AUTR A 1 Offset(-8,40)
		AUTR A 1 Offset(-16,49)
		AUTR A 1 Offset(-48,125)
		AUTR A 1 Offset(-24,62)
		AUTR A 1 Offset(-32,79)
		AUTR A 1 Offset(-40,100)
		AUTR A 1 Offset(-56,154)
		NULL A 0 Offset(-1,33)
	DeselectLoop:
		NULL AAAAAAAAAAAAAAAA 0 A_Lower
		Stop
    Select:
		AUTR A 1 Offset(-130,154)
		AUTR A 1 Offset(-120,139)
		AUTR A 1 Offset(-110,125)
		AUTR A 1 Offset(-100,112)
		AUTR A 1 Offset(-90,100)
		AUTR A 1 Offset(-80,89)
		AUTR A 1 Offset(-70,79)
		AUTR A 1 Offset(-60,70)
		AUTR A 1 Offset(-50,62)
		AUTR A 1 Offset(-40,55)
		AUTR A 1 Offset(-30,49)
		AUTR A 1 Offset(-20,44)
		AUTR A 1 Offset(-15,40)
		AUTR A 1 Offset(-10,37)
		AUTR A 1 Offset(-5,34)
		AUTR A 1 Offset(0,0)
		goto Ready
	Fire:
		NULL A 0 A_JumpIfInventory("AssaultRifleAmmoClip", 1, 1)
		goto Reload
		
		NULL A 0 A_AlertMonsters
		NULL A 0 A_Light2
		NULL A 0 A_SpawnItemEx("PistolCasing", 3, 15, ACS_ExecuteWithResult(aow_casingheight, 36), frandom(-2, -4), frandom(2, 3), frandom(1, 3), frandom(45, 60), 128)
		NULL A 0 ACS_ExecuteWithResult(aow_traceroffset, 8, 0)
		AUTR C 1 BRIGHT A_FireBullets (1.2, 1.2, -1, 12, "AOWBulletPuff", FBF_NORANDOM | FBF_USEAMMO)
		NULL A 0 A_SetPitch(pitch-0.25)		
		AUTR D 1 BRIGHT A_Light1
		NULL A 0 A_SetPitch(pitch+0.25)
		AUTR A 2 A_Light0
		AUTR A 3 A_ReFire
		AUTR A 2
		goto Ready
		
	AltFire:
	Reload:
  		NULL A 0 A_JumpIfInventory("AssaultRifleAmmoClip", 31, "Ready")
  		NULL A 0 A_JumpIfInventory("AssaultRifleAmmo", 1, 1)
  		Goto Ready
  		AURR A 1 Offset(-4, 34)
 		AURR A 1 Offset(-8, 38)
  		AURR A 1 Offset(-16,42)
  		AURR A 1 Offset(-24,46)
  		AURR B 1 Offset(-32,50)
  		AURR B 1 Offset(-40,54)
  		AURR B 30 // A_PlayWeaponSound("") # CLIP OUT
		NULL A 0 A_JumpIfInventory("AssaultRifleAmmoClip", 1, "ReloadWithAdditionalBullet")
		NULL A 0 // A_FireCustomMissile("", 0, 0, 5, -10) # SPAWN EMPTY MAG
	ReloadEmpty:
		NULL A 0 A_JumpIfInventory("AssaultRifleAmmoClip", 30, "ReloadEnd")
  		NULL A 0 A_JumpIfInventory("AssaultRifleAmmo", 1, 1)
		Goto ReloadEnd
		NULL A 0 A_TakeInventory("AssaultRifleAmmo", 1)
		NULL A 0 A_GiveInventory("AssaultRifleAmmoClip", 1)
		Loop
	ReloadWithAdditionalBullet:
		NULL A 0 A_JumpIfInventory("AssaultRifleAmmoClip", 31, "ReloadEnd")
  		NULL A 0 A_JumpIfInventory("AssaultRifleAmmo", 1, 1)
		Goto ReloadEnd
		NULL A 0 A_TakeInventory("AssaultRifleAmmo", 1)
		NULL A 0 A_GiveInventory("AssaultRifleAmmoClip", 1)
		Loop
	ReloadEnd:
  		AURR A 30 // A_PlayWeaponSound("") # CLIP IN
  		AURR A 1 Offset (-32,50)
  		AURR A 1 Offset (-24,46)
 		AURR A 1 Offset (-16,42)
  		AURR A 1 Offset (-8,38)
  		AURR A 1 Offset (-4,34)
  		AURR A 1 Offset (0, 0)
		goto Ready	
		
	Spawn:
		AUTR X -1
		stop
	}
}

Actor AssaultRifleAmmo : Ammo
{
	Inventory.Amount 90
	Inventory.MaxAmount 150
}

Actor AssaultRifleAmmoClip : Ammo
{
	Inventory.Amount 31
	Inventory.MaxAmount 31
}