struct AOWPlayer
{
	int money;
	int class;
};

AOWPlayer Players[MAX_PLAYERS];


// Accessors
function int PlayerTid(int player) { return 1000 + player; }
function int PlayerMoney(int player) { return Players[player].money; }
function int PlayerClassAOW(int player) { return Players[player].class; }
function bool PlayerHasClass(int player) { return PlayerClassAOW(player) != -1; }


// Setters
function void SetPlayerMoney(int player, int money)
{
	Players[player].money = max(0, money);
}

function void GiveMoney(int player, int money)
{
	SetPlayerMoney(player, PlayerMoney(player) + money);
}

function int SetPlayerClass(int player, int class)
{
	Players[player].class = class;
	SetActorInventory(PlayerTid(player), "AOWClass", class + 1);
}


// Clientside accessors
function int ConsolePlayerMoney(void)
{
	int money1 = CheckActorInventory(ConsolePlayerTid(), "MoneyClientside1");
	int money2 = CheckActorInventory(ConsolePlayertid(), "MoneyClientside2");
	return (money2<<15) | money1;
}

function int ConsolePlayerClassAOW(void)
{
	return CheckActorInventory(ConsolePlayerTid(), "AOWClass") - 1;
}

function bool ConsolePlayerHasClass(void)
{
	return ConsolePlayerClassAOW() != -1;
}


// Property synchronization
script aow_syncplayers OPEN
{
	while (true)
	{
		for (int player = 0; player < MAX_PLAYERS; player++)
		{
			if (!PlayerInGame(player))
				continue;
				
			// Credit flow
			if (Timer() % 35 == 0)
				GiveMoney(player, GetCVar("aowr_credflow"));
		
			int money = PlayerMoney(player);
			SetActorInventory(PlayerTid(player), "Money", money);
			SetActorInventory(PlayerTid(player), "MoneyClientside1", money & 0x7fff);
			SetActorInventory(Playertid(player), "MoneyClientside2", money>>15);
		}
		
		Delay(1);
	}
}

// Game logic
script aow_enter ENTER
{
	InitPlayer(true);
}

script aow_respawn RESPAWN
{
	InitPlayer(false);
}

script aow_death DEATH
{
	SetActivatorToTarget(0);
	if (CheckWeapon("BloodRevolver"))
		GiveInventory("BloodRevolverAmmo", 1);
}

function void InitPlayer(bool isnew)
{
	int player = PlayerNumber();
	Thing_ChangeTid(0, PlayerTid(player));
	
	SetInventory("IsRed", PlayerTeam() == TEAM_RED);
	SetInventory("VirtualJump", 1); // ZDOOMVER
	SetInventory("AOWReloadGiver", 1);
	SetInventory("AOWReloadTaker", 1);
	SetInventory("AOWGrenadeGiver", 1);
	SetInventory("AOWGrenadeTaker", 1);
	
	if (isnew) Players[player].money = GetCVar("aowr_startcredits");
	Players[player].class = -1;
	
	TeleportToSpawnRoom();
}

// Player HUD
script aow_playerhud OPEN CLIENTSIDE
{
	int hid = NewHid();
	int hid2 = NewHid();
	
	while (true)
	{
		if (!ConsolePlayerInGame())
		{
			Delay(1);
			restart;
		}
		
		HudResetState();
		HudSetStayTime(0.03);
		HudSetTextOriginX(HUD_TEXTORIGIN_LEFT);
		int xscale = FixedDiv(GetAspectRatio(), ASPECT_4_3);
		HudSetPoint(HudRight() - 202 * xscale, HudBottom() - 88.0);
		HudDrawText(hid, StrParam(s:"\cjCredits: \cd$", d:ConsolePlayerMoney()));
		
		if (ConsolePlayerHasClass())
		{
			HudSetPoint(HudRight() - 202 * xscale, HudBottom() - 70.0);
			HudDrawText(hid2, StrParam(s:"\cj", s:ClassName(ConsolePlayerClassAOW())));
		}
		
		Delay(1);
	}
}
